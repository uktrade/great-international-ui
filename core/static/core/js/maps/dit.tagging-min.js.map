{"version":3,"sources":["dit.tagging.js"],"names":["Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","closest","s","el","this","call","parentElement","parentNode","nodeType","dit","window","tagging","base","init","debug_mode","handleLinkEvent","event","link","target","type","key","action","getAttribute","ctaClasses","linkClasses","index","length","indexOf","isCta","inferLinkType","element","inferElement","value","titleElements","titleElement","querySelector","textContent","trim","guessTitleFromLinkContents","inferLinkValue","destination","sendEvent","linkEvent","baseEvent","sendLinkEvent","handleVideoEvent","video","inferVideoValue","handleFormEvent","form","inferFormValue","formData","includeFormData","toLowerCase","Array","from","FormData","e","map","encodeURIComponent","join","data","formEvent","sendFormEvent","domObject","titleSection","title","idSection","id","console","log","dataLayer","push","addEventListener","document","querySelectorAll","forEach"],"mappings":"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","sourcesContent":["/**\n * This mostly replicates the original DIT tagging script for\n * automatic GA integration, but without the need for jQuery.\n * (see https://github.com/uktrade/directory-components/blob/master/directory_components/static/directory_components/js/dit.tagging.js)\n *\n * Differences:\n * - Uses the `click` event rather than `mouseup` to track\n *   clicks (as `mouseup` does not fire on touch events)\n * - Removes `card` link type matching (class list for matching\n *   wasn't up to date)\n * -\n *\n */\n/* istanbul ignore next */\nif (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n}\n/* istanbul ignore next */\nif (!Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n        var el = this;\n\n        do {\n            if (Element.prototype.matches.call(el, s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    };\n}\n\ndit = window.dit || {}\ndit.tagging = dit.tagging || {};\n\ndit.tagging.base = new function () {\n    this.init = function (debug_mode) {\n        window.addEventListener('DOMContentLoaded', () => {\n            addTaggingForLinks();\n            addTaggingForVideos();\n            addTaggingForForms();\n        });\n\n        function addTaggingForLinks() {\n            document.addEventListener('click', handleLinkEvent);\n            document.addEventListener('keydown', handleLinkEvent);\n        }\n\n        function handleLinkEvent(event) {\n            var link = event.target.closest('a');\n            if (!link) return;\n\n            if (event.type === 'click' || (event.type === 'keydown' && event.key === 'Enter')) {\n                sendLinkEvent(link);\n            }\n        }\n\n        function addTaggingForVideos() {\n            // Video events do not bubble, so cannot be handled by event delegation\n            document.querySelectorAll('video').forEach(function (element) {\n                element.addEventListener('play', handleVideoEvent);\n                element.addEventListener('pause', handleVideoEvent);\n                element.addEventListener('ended', handleVideoEvent);\n            });\n        }\n\n        function handleVideoEvent(event) {\n            sendVideoEvent(event.target, event.type);\n        }\n\n        function addTaggingForForms() {\n            document.addEventListener('submit', handleFormEvent);\n        }\n\n        function handleFormEvent(event) {\n            sendFormEvent(event.target);\n        }\n\n        function sendLinkEvent(link) {\n            var action = link.getAttribute('data-ga-action') || 'clickLink';\n            var type = link.getAttribute('data-ga-type') || inferLinkType(link);\n            var element = link.getAttribute('data-ga-element') || inferElement(link);\n            var value = link.getAttribute('data-ga-value') || inferLinkValue(link);\n            var destination = link.getAttribute('href');\n\n            sendEvent(linkEvent(action, type, element, value, destination));\n        }\n\n        function sendVideoEvent(video, action) {\n            var type = video.getAttribute('data-ga-type') || 'video';\n            var element = video.getAttribute('data-ga-element') || inferElement(video);\n            var value = video.getAttribute('data-ga-value') || inferVideoValue(video);\n\n            sendEvent(baseEvent(action, type, element, value));\n        }\n\n        function sendFormEvent(form) {\n            var action = form.getAttribute('data-ga-action') || 'submit';\n            var type = form.getAttribute('data-ga-type') || 'form';\n            var element = form.getAttribute('data-ga-element') || inferElement(form);\n            var value = form.getAttribute('data-ga-value') || inferFormValue(form);\n            var formData = null;\n\n            var includeFormData = form.getAttribute('data-ga-include-form-data');\n            if (includeFormData && includeFormData.toLowerCase() === \"true\") {\n                formData = Array.from(\n                    new FormData(form),\n                    function (e) {\n                        return e.map(encodeURIComponent).join('=');\n                    }\n                ).join('&')\n            }\n\n            sendEvent(formEvent(action, type, element, value, formData));\n        }\n\n        function inferLinkType(link) {\n            return isCta(link) ? 'CTA' : 'PageLink';\n        }\n\n        function inferElement(domObject) {\n            var titleSection = domObject.closest('[data-ga-section]');\n            var title = titleSection && titleSection.getAttribute('data-ga-section');\n            if (title) {\n                return title;\n            }\n\n            var idSection = domObject.closest('[id]')\n            var id = idSection && idSection.getAttribute('id');\n            if (id) {\n                return id;\n            }\n\n            return '';\n        }\n\n        function inferLinkValue(link) {\n            return guessTitleFromLinkContents(link) || link.textContent.trim();\n        }\n\n        function inferVideoValue(video) {\n            return video.querySelector('source').getAttribute('src');\n        }\n\n        function inferFormValue(form) {\n            return form.getAttribute('action') || '';\n        }\n\n        function isCta(link) {\n            var ctaClasses = ['button', 'cta'];\n            var linkClasses = link.getAttribute('class') || '';\n            for (var index = 0; index < ctaClasses.length; index++) {\n                if (linkClasses.indexOf(ctaClasses[index]) !== -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function guessTitleFromLinkContents(link) {\n            var titleElements = ['h1', 'h2', 'h3', 'h4', 'h5', 'span', 'p'];\n\n            for (var index = 0; index < titleElements.length; index++) {\n                var titleElement = link.querySelector(titleElements[index]);\n                if (titleElement) {\n                    return titleElement.textContent.trim();\n                }\n            }\n\n            return null;\n        }\n\n        function baseEvent(action, type, element, value) {\n            return {\n                'event': 'gaEvent',\n                'action': action,\n                'type': type,\n                'element': element,\n                'value': value\n            }\n        }\n\n        function linkEvent(action, type, element, value, destination) {\n            var linkEvent = baseEvent(action, type, element, value);\n            linkEvent['destination'] = destination;\n\n            return linkEvent;\n        }\n\n        function formEvent(action, type, element, value, data) {\n            var formEvent = baseEvent(action, type, element, value);\n\n            if (data) {\n                formEvent['formData'] = data;\n            }\n\n            return formEvent;\n        }\n\n        function sendEvent(event) {\n            if (debug_mode) {\n                console.log(event);\n            }\n\n            window.dataLayer.push(event);\n        }\n    }\n\n};\n\n"]}
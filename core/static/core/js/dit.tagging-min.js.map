{"version":3,"file":"js/dit.tagging-min.js","mappings":"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","sources":["webpack://great-international-ui/./core/js/src/dit.tagging.js"],"sourcesContent":["/**\n * This mostly replicates the original DIT tagging script for\n * automatic GA integration, but without the need for jQuery.\n * (see https://github.com/uktrade/directory-components/blob/master/directory_components/static/directory_components/js/dit.tagging.js)\n *\n * Differences:\n * - Uses the `click` event rather than `mouseup` to track\n *   clicks (as `mouseup` does not fire on touch events)\n * - Removes `card` link type matching (class list for matching\n *   wasn't up to date)\n * -\n *\n */\n/* istanbul ignore next */\nif (!Element.prototype.matches) {\n    Element.prototype.matches =\n        Element.prototype.msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector;\n}\n/* istanbul ignore next */\nif (!Element.prototype.closest) {\n    Element.prototype.closest = function (s) {\n        var el = this;\n\n        do {\n            if (Element.prototype.matches.call(el, s)) return el;\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    };\n}\n\ndit = window.dit || {}\ndit.tagging = dit.tagging || {};\n\ndit.tagging.base = new function () {\n    this.init = function (debug_mode) {\n        window.addEventListener('DOMContentLoaded', () => {\n            addTaggingForLinks();\n            addTaggingForVideos();\n            addTaggingForForms();\n        });\n\n        function addTaggingForLinks() {\n            document.addEventListener('click', handleLinkEvent);\n            document.addEventListener('keydown', handleLinkEvent);\n        }\n\n        function handleLinkEvent(event) {\n            var link = event.target.closest('a');\n            if (!link) return;\n\n            if (event.type === 'click' || (event.type === 'keydown' && event.key === 'Enter')) {\n                sendLinkEvent(link);\n            }\n        }\n\n        function addTaggingForVideos() {\n            // Video events do not bubble, so cannot be handled by event delegation\n            document.querySelectorAll('video').forEach(function (element) {\n                element.addEventListener('play', handleVideoEvent);\n                element.addEventListener('pause', handleVideoEvent);\n                element.addEventListener('ended', handleVideoEvent);\n            });\n        }\n\n        function handleVideoEvent(event) {\n            sendVideoEvent(event.target, event.type);\n        }\n\n        function addTaggingForForms() {\n            document.addEventListener('submit', handleFormEvent);\n        }\n\n        function handleFormEvent(event) {\n            sendFormEvent(event.target);\n        }\n\n        function sendLinkEvent(link) {\n            var action = link.getAttribute('data-ga-action') || 'clickLink';\n            var type = link.getAttribute('data-ga-type') || inferLinkType(link);\n            var element = link.getAttribute('data-ga-element') || inferElement(link);\n            var value = link.getAttribute('data-ga-value') || inferLinkValue(link);\n            var destination = link.getAttribute('href');\n\n            sendEvent(linkEvent(action, type, element, value, destination));\n        }\n\n        function sendVideoEvent(video, action) {\n            var type = video.getAttribute('data-ga-type') || 'video';\n            var element = video.getAttribute('data-ga-element') || inferElement(video);\n            var value = video.getAttribute('data-ga-value') || inferVideoValue(video);\n\n            sendEvent(baseEvent(action, type, element, value));\n        }\n\n        function sendFormEvent(form) {\n            var action = form.getAttribute('data-ga-action') || 'submit';\n            var type = form.getAttribute('data-ga-type') || 'form';\n            var element = form.getAttribute('data-ga-element') || inferElement(form);\n            var value = form.getAttribute('data-ga-value') || inferFormValue(form);\n            var formData = null;\n\n            var includeFormData = form.getAttribute('data-ga-include-form-data');\n            if (includeFormData && includeFormData.toLowerCase() === \"true\") {\n                formData = Array.from(\n                    new FormData(form),\n                    function (e) {\n                        return e.map(encodeURIComponent).join('=');\n                    }\n                ).join('&')\n            }\n\n            sendEvent(formEvent(action, type, element, value, formData));\n        }\n\n        function inferLinkType(link) {\n            return isCta(link) ? 'CTA' : 'PageLink';\n        }\n\n        function inferElement(domObject) {\n            var titleSection = domObject.closest('[data-ga-section]');\n            var title = titleSection && titleSection.getAttribute('data-ga-section');\n            if (title) {\n                return title;\n            }\n\n            var idSection = domObject.closest('[id]')\n            var id = idSection && idSection.getAttribute('id');\n            if (id) {\n                return id;\n            }\n\n            return '';\n        }\n\n        function inferLinkValue(link) {\n            return guessTitleFromLinkContents(link) || link.textContent.trim();\n        }\n\n        function inferVideoValue(video) {\n            return video.querySelector('source').getAttribute('src');\n        }\n\n        function inferFormValue(form) {\n            return form.getAttribute('action') || '';\n        }\n\n        function isCta(link) {\n            var ctaClasses = ['button', 'cta'];\n            var linkClasses = link.getAttribute('class') || '';\n            for (var index = 0; index < ctaClasses.length; index++) {\n                if (linkClasses.indexOf(ctaClasses[index]) !== -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        function guessTitleFromLinkContents(link) {\n            var titleElements = ['h1', 'h2', 'h3', 'h4', 'h5', 'span', 'p'];\n\n            for (var index = 0; index < titleElements.length; index++) {\n                var titleElement = link.querySelector(titleElements[index]);\n                if (titleElement) {\n                    return titleElement.textContent.trim();\n                }\n            }\n\n            return null;\n        }\n\n        function baseEvent(action, type, element, value) {\n            return {\n                'event': 'gaEvent',\n                'action': action,\n                'type': type,\n                'element': element,\n                'value': value\n            }\n        }\n\n        function linkEvent(action, type, element, value, destination) {\n            var linkEvent = baseEvent(action, type, element, value);\n            linkEvent['destination'] = destination;\n\n            return linkEvent;\n        }\n\n        function formEvent(action, type, element, value, data) {\n            var formEvent = baseEvent(action, type, element, value);\n\n            if (data) {\n                formEvent['formData'] = data;\n            }\n\n            return formEvent;\n        }\n\n        function sendEvent(event) {\n            if (debug_mode) {\n                console.log(event);\n            }\n\n            window.dataLayer.push(event);\n        }\n    }\n\n};\n\n"],"names":["Element","prototype","matches","msMatchesSelector","webkitMatchesSelector","closest","s","el","this","call","parentElement","parentNode","nodeType","dit","window","tagging","base","init","debug_mode","handleLinkEvent","event","link","target","type","key","sendEvent","action","element","value","destination","linkEvent","baseEvent","getAttribute","ctaClasses","linkClasses","index","length","indexOf","isCta","inferLinkType","inferElement","titleElements","titleElement","querySelector","textContent","trim","guessTitleFromLinkContents","inferLinkValue","sendLinkEvent","handleVideoEvent","video","inferVideoValue","handleFormEvent","form","formData","includeFormData","inferFormValue","toLowerCase","Array","from","FormData","e","map","encodeURIComponent","join","data","formEvent","domObject","titleSection","title","idSection","console","log","dataLayer","push","addEventListener","document","querySelectorAll","forEach"],"sourceRoot":""}
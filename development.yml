version: '3.4'

services:
  pgsql:
    container_name: great_postgres
    build: ./dockerise/postgres/
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./dockerise/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./dockerise/postgres/data/:/data/
    ports:
      - '5432:5432'
    networks:
      - inside-network

  directory-cms:
    build: ../directory-cms/
    hostname: cms.trade.great
    container_name: directory_cms
    volumes:
      - ../directory-cms:/app
    ports:
      - '8010:8010'
    env_file:
      - ../directory-cms/conf/env/dev
      - ../directory-cms/conf/env/dev-docker
      - ../directory-cms/conf/env/secrets-do-not-commit
    networks:
      - inside-network
    depends_on:
      - redis
    stdin_open: true
    tty: true
    command: bash -c 'while !</dev/tcp/pgsql/5432; do echo "Waiting for Postgres to start..."; sleep 1; done; sh /app/start.sh'

  directory-api:
    build: ../directory-api/
    hostname: api.trade.great
    container_name: directory_api
    volumes:
      - ../directory-api:/app
    ports:
      - '8000:8000'
    env_file:
      - ../directory-api/conf/env/dev
      - ../directory-api/conf/env/dev-docker
      - ../directory-api/conf/env/secrets-do-not-commit
    networks:
      - inside-network
    depends_on:
      - pgsql
      - redis
      - es
    stdin_open: true
    tty: true
    command: bash -c 'while !</dev/tcp/pgsql/5432; do echo "Waiting for Postgres to start..."; sleep 1; done; sh /app/start.sh'

  great-international-ui:
    build: ./
    hostname: international.trade.great
    container_name: great-international-ui
    volumes:
      - .:/app
    ports:
      - '8012:8012'
    env_file:
      - ./conf/env/dev
      - ./conf/env/dev-docker
      - ./conf/env/secrets-do-not-commit
    networks:
      - inside-network
    depends_on:
      - directory-cms
      - redis
      - directory-api
    stdin_open: true
    tty: true

  redis:
    image: redis
    container_name: great_redis
    restart: always
    ports:
      - '6379:6379'
    networks:
      - inside-network

  es:
    image: opensearchproject/opensearch:1.2.2
    container_name: great_es
    networks:
      - inside-network
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=true
    ports:
      - "9200:9200"

networks:
  inside-network:
    driver: bridge
